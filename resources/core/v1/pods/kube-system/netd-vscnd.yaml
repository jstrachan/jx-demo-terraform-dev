apiVersion: v1
kind: Pod
metadata:
  annotations:
    components.gke.io/component-name: netd
    components.gke.io/component-version: 1.0.7
  creationTimestamp: "2020-11-07T03:22:38Z"
  generateName: netd-
  labels:
    controller-revision-hash: d94dd5d6b
    k8s-app: netd
    pod-template-generation: "1"
  name: netd-vscnd
  namespace: kube-system
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: DaemonSet
    name: netd
    uid: e7a2d0c1-0fd8-4805-b3fa-19edb0c6c840
  resourceVersion: "22553670"
  selfLink: /api/v1/namespaces/kube-system/pods/netd-vscnd
  uid: 155b1a8f-802e-4f94-b1c0-c3e0d783dc5e
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchFields:
          - key: metadata.name
            operator: In
            values:
            - gke-jstrachan-tekton-nap-n1-standard--0a7ecf20-446q
  containers:
  - args:
    - --enable-policy-routing=$(ENABLE_POLICY_ROUTING)
    - --logtostderr
    - --reconcile-interval-seconds=$(RECONCILE_INTERVAL_SECONDS)
    - --metrics-collectors=$(METRICS_COLLECTORS)
    - --metrics-address=$(METRICS_ADDRESS)
    env:
    - name: ENABLE_POLICY_ROUTING
      value: "false"
    - name: RECONCILE_INTERVAL_SECONDS
      valueFrom:
        configMapKeyRef:
          key: reconcile_interval_seconds
          name: netd-config
    - name: METRICS_COLLECTORS
      valueFrom:
        configMapKeyRef:
          key: metrics_collectors
          name: networking-metrics-config
    - name: METRICS_ADDRESS
      valueFrom:
        configMapKeyRef:
          key: metrics_address
          name: networking-metrics-config
    image: gke.gcr.io/netd-amd64:v0.2.7-gke.0
    imagePullPolicy: Always
    name: netd
    resources: {}
    securityContext:
      capabilities:
        add:
        - NET_ADMIN
      privileged: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: netd-token-fdlbs
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostNetwork: true
  initContainers:
  - command:
    - sh
    - /install-cni.sh
    env:
    - name: CNI_SPEC_TEMPLATE
      valueFrom:
        configMapKeyRef:
          key: cni_spec_template
          name: netd-config
    - name: CNI_SPEC_NAME
      valueFrom:
        configMapKeyRef:
          key: cni_spec_name
          name: netd-config
    - name: ENABLE_CALICO_NETWORK_POLICY
      valueFrom:
        configMapKeyRef:
          key: enable_calico_network_policy
          name: netd-config
    - name: ENABLE_PRIVATE_IPV6_ACCESS
      valueFrom:
        configMapKeyRef:
          key: enable_private_ipv6_access
          name: netd-config
    - name: ENABLE_MASQUERADE
      valueFrom:
        configMapKeyRef:
          key: enable_masquerade
          name: netd-config
    - name: ENABLE_BANDWIDTH_PLUGIN
      valueFrom:
        configMapKeyRef:
          key: enable_bandwidth_plugin
          name: netd-config
    - name: ENABLE_CILIUM_PLUGIN
      valueFrom:
        configMapKeyRef:
          key: enable_cilium_plugin
          name: netd-config
    image: gke.gcr.io/netd-amd64:v0.2.7-gke.0
    imagePullPolicy: IfNotPresent
    name: install-cni
    resources: {}
    securityContext:
      capabilities:
        add:
        - NET_ADMIN
      privileged: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /host/etc/cni/net.d
      name: cni-net-dir
    - mountPath: /host/home/kubernetes/bin
      name: kubernetes-bin
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: netd-token-fdlbs
      readOnly: true
  nodeName: gke-jstrachan-tekton-nap-n1-standard--0a7ecf20-446q
  nodeSelector:
    beta.kubernetes.io/os: linux
    cloud.google.com/gke-netd-ready: "true"
  priority: 2000001000
  priorityClassName: system-node-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: netd
  serviceAccountName: netd
  terminationGracePeriodSeconds: 0
  tolerations:
  - effect: NoExecute
    operator: Exists
  - effect: NoSchedule
    operator: Exists
  - key: components.gke.io/gke-managed-components
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/disk-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/pid-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/unschedulable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/network-unavailable
    operator: Exists
  volumes:
  - hostPath:
      path: /etc/cni/net.d
      type: ""
    name: cni-net-dir
  - hostPath:
      path: /home/kubernetes/bin
      type: Directory
    name: kubernetes-bin
  - name: netd-token-fdlbs
    secret:
      defaultMode: 420
      secretName: netd-token-fdlbs
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2020-11-07T03:23:00Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2020-11-07T03:23:04Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2020-11-07T03:23:04Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2020-11-07T03:22:38Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://a3d597b82d6c6af2a1ee1467770d2ce1844fe06de69fcb708f74a3ba570a835f
    image: gke.gcr.io/netd-amd64:v0.2.7-gke.0
    imageID: docker-pullable://gke.gcr.io/netd-amd64@sha256:ff488d2d9cc4a7bfd64fceabf36de05542f5fabe26b07dbd33d9cc2f693a74fd
    lastState: {}
    name: netd
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2020-11-07T03:23:04Z"
  hostIP: 10.128.0.14
  initContainerStatuses:
  - containerID: docker://25678a0ada80be4aa687ac175af4aecb74955455f970dc186a86f9bbf6a39889
    image: gke.gcr.io/netd-amd64:v0.2.7-gke.0
    imageID: docker-pullable://gke.gcr.io/netd-amd64@sha256:ff488d2d9cc4a7bfd64fceabf36de05542f5fabe26b07dbd33d9cc2f693a74fd
    lastState: {}
    name: install-cni
    ready: true
    restartCount: 0
    state:
      terminated:
        containerID: docker://25678a0ada80be4aa687ac175af4aecb74955455f970dc186a86f9bbf6a39889
        exitCode: 0
        finishedAt: "2020-11-07T03:22:59Z"
        reason: Completed
        startedAt: "2020-11-07T03:22:58Z"
  phase: Running
  podIP: 10.128.0.14
  podIPs:
  - ip: 10.128.0.14
  qosClass: BestEffort
  startTime: "2020-11-07T03:22:38Z"
