apiVersion: v1
kind: Pod
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: docker/default
  creationTimestamp: "2020-11-07T03:13:20Z"
  generateName: l7-default-backend-678889f899-
  labels:
    k8s-app: glbc
    name: glbc
    pod-template-hash: 678889f899
  name: l7-default-backend-678889f899-bt2ll
  namespace: kube-system
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: l7-default-backend-678889f899
    uid: ee2bf00a-4124-44ef-948a-3e15368b7dc4
  resourceVersion: "22547337"
  selfLink: /api/v1/namespaces/kube-system/pods/l7-default-backend-678889f899-bt2ll
  uid: ae745783-11cd-4887-b9eb-d55eea64f763
spec:
  containers:
  - image: k8s.gcr.io/ingress-gce-404-server-with-metrics-amd64:v1.6.0
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 8080
        scheme: HTTP
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    name: default-http-backend
    ports:
    - containerPort: 8080
      protocol: TCP
    resources:
      limits:
        cpu: 10m
        memory: 20Mi
      requests:
        cpu: 10m
        memory: 20Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-rcq8c
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: gke-jstrachan-tekton-default-pool-154aeb80-pmxj
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: default-token-rcq8c
    secret:
      defaultMode: 420
      secretName: default-token-rcq8c
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2020-11-07T03:13:20Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2020-11-07T03:14:58Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2020-11-07T03:14:58Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2020-11-07T03:13:20Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://ae426ae5f7371385fe94db6160564649f001459018dcb429e90fe088882ec06c
    image: k8s.gcr.io/ingress-gce-404-server-with-metrics-amd64:v1.6.0
    imageID: docker-pullable://k8s.gcr.io/ingress-gce-404-server-with-metrics-amd64@sha256:d83d8a481145d0eb71f8bd71ae236d1c6a931dd3bdcaf80919a8ec4a4d8aff74
    lastState: {}
    name: default-http-backend
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2020-11-07T03:14:56Z"
  hostIP: 10.128.0.11
  phase: Running
  podIP: 10.8.7.14
  podIPs:
  - ip: 10.8.7.14
  qosClass: Guaranteed
  startTime: "2020-11-07T03:13:20Z"
