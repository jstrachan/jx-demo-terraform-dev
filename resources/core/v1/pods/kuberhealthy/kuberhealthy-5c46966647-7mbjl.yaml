apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2020-11-07T03:04:14Z"
  generateName: kuberhealthy-5c46966647-
  labels:
    app: kuberhealthy
    pod-template-hash: 5c46966647
  name: kuberhealthy-5c46966647-7mbjl
  namespace: kuberhealthy
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: kuberhealthy-5c46966647
    uid: 3670ff39-8f0c-4f63-82b1-8870b802bdbd
  resourceVersion: "22539018"
  selfLink: /api/v1/namespaces/kuberhealthy/pods/kuberhealthy-5c46966647-7mbjl
  uid: 2b31d8da-d836-44fa-bcec-e1728fb5d7d0
spec:
  automountServiceAccountToken: true
  containers:
  - command:
    - /app/kuberhealthy
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    image: kuberhealthy/kuberhealthy:v2.3.1
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      initialDelaySeconds: 2
      periodSeconds: 4
      successThreshold: 1
      tcpSocket:
        port: 8080
      timeoutSeconds: 1
    name: kuberhealthy
    ports:
    - containerPort: 8080
      name: http
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      initialDelaySeconds: 2
      periodSeconds: 4
      successThreshold: 1
      tcpSocket:
        port: 8080
      timeoutSeconds: 1
    resources:
      limits:
        cpu: "2"
        memory: 1Gi
      requests:
        cpu: 400m
        memory: 300Mi
    securityContext:
      allowPrivilegeEscalation: false
      runAsNonRoot: true
      runAsUser: 999
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/config/
      name: config-volume
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kuberhealthy-token-b5wcf
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: gke-jstrachan-tekton-default-pool-154aeb80-ccfi
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: kuberhealthy
  serviceAccountName: kuberhealthy
  terminationGracePeriodSeconds: 60
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - configMap:
      defaultMode: 420
      name: kuberhealthy
    name: config-volume
  - name: kuberhealthy-token-b5wcf
    secret:
      defaultMode: 420
      secretName: kuberhealthy-token-b5wcf
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2020-11-07T03:04:14Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2020-11-07T03:05:09Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2020-11-07T03:05:09Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2020-11-07T03:04:14Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://cd3bd594cdfe7ca29e91d163f09cad67411b64f69684872313a11612e538d2b6
    image: kuberhealthy/kuberhealthy:v2.3.1
    imageID: docker-pullable://kuberhealthy/kuberhealthy@sha256:3007da09089b30935c38587483aaebf99a04e12134a5bb4f24ea8e900a959067
    lastState: {}
    name: kuberhealthy
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2020-11-07T03:05:06Z"
  hostIP: 10.128.0.2
  phase: Running
  podIP: 10.8.3.6
  podIPs:
  - ip: 10.8.3.6
  qosClass: Burstable
  startTime: "2020-11-07T03:04:14Z"
